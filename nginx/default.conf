# ---------- HTTP server for Let's Encrypt ----------
server {
    listen 80;
    listen [::]:80;
    server_name moresvet.ru www.moresvet.ru;

 location /.well-known/acme-challenge/ {
    alias /var/www/moresvet/certbot/www/;
    allow all;
}

    # Остальные HTTP-запросы редиректим на HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# ---------- HTTPS server ----------
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name moresvet.ru www.moresvet.ru;

    # На время получения сертификата используем временный
    ssl_certificate /etc/ssl/certs/ssl-cert-snakeoil.pem;
    ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;

    location / {
        proxy_pass http://nextjs:3005;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    location /_next/static/ {
        proxy_pass http://nextjs:3005/_next/static/;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header Host $host;
        expires 365d;
        add_header Cache-Control "public, no-transform";
    }

    location /public/ {
        proxy_pass http://nextjs:3005/public/;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header Host $host;
        expires 365d;
        add_header Cache-Control "public, no-transform";
    }
}
